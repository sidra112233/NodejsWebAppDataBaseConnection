<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Course Management</title>
    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
            color: #2E073F;
            display: flex;
            flex-direction: column;
            height: 100vh;
        }

        .navbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: #0D7C66;
            padding: 10px 20px;
        }

        .navbar-left {
            display: flex;
            align-items: center;
        }

        .logo {
            height: 40px;
            margin-right: 10px;
        }

        .site-name {
            color: white;
            font-size: 1.5em;
        }

        .navbar-right a {
            color: white;
            padding: 14px 20px;
            text-decoration: none;
            text-align: center;
        }

        .navbar-right a:hover {
            background-color: gray;
        }

        @media screen and (max-width: 500px) {
            .navbar a {
                float: none;
                display: block;
            }
        }

        .register-btn {
            border: 1px solid white;
            border-radius: 5px;
        }

        /* Main container for sidebar and content */
        .main-container {
            display: flex;
            flex: 1;
            overflow: hidden;
            height: calc(100vh - 60px); /* Adjust height based on navbar height */
        }

        /* Sidebar styling */
        #sidebar {
            width: 250px;
             background-color: #219C90;
            color: #ffffff;
            padding: 15px;
            overflow-y: auto;
            height: 100%;
        }

        /* Content styling */
        #content {
            flex: 1;
            padding: 15px;
            overflow-y: auto;
            height: 100%;
            background-color: #41B3A2;

        }

        #course-list, .module-list ul, #material-list, #quiz-list {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }

        #course-list li, .module-list ul li {
            margin-bottom: 10px;
        }

        #course-list a, .module-list a, .material-link {
            text-decoration: none;
            color: #1F316F;
            display: block;
            padding: 5px;
        }

        .module-list {
            display: none;
            padding-left: 20px;
        }

        .module-list a:hover, #course-list a:hover, .material-link:hover {
            text-decoration: underline;
        }

        .material-description {
            color: #1c2841;
            font-style: italic;
            margin-bottom: 5px;
        }

        .loading {
            font-style: italic;
            color: #555;
        }
    </style>
</head>
<body>

<!-- Navbar -->
<nav class="navbar">
    <div class="navbar-left">
        <img src="/path/to/logo.png" alt="Logo" class="logo">
        <span class="site-name">LEARN CODE PRO</span>
    </div>
    <div class="navbar-right">
        <a href="/">Home</a>
        <a href="/about">About</a>
        <a href="/contact">Contact</a>
        <a href="/login" class="register-btn">Register</a>
    </div>
</nav>

<!-- Main container for sidebar and content -->
<div class="main-container">
    <div id="sidebar">
        <h2>Courses</h2>
        <ul id="course-list">
            <% if (courses && courses.length > 0) { %>
                <% courses.forEach(course => { %>
                    <li>
                        <a href="#" class="course-link" data-course-id="<%= course.course_id %>"><%= course.course_name %></a>
                        <div class="module-list" data-course-id="<%= course.course_id %>">
                            <h3>Modules</h3>
                            <ul class="module-items"></ul>
                        </div>
                    </li>
                <% }); %>
            <% } else { %>
                <li>No courses available</li>
            <% } %>
        </ul>
    </div>
    <div id="content">
        <h2 id="course-name"><%= courseName || 'Select a Course' %></h2>
        <p id="course-description"><%= courseDescription || 'Course description will appear here.' %></p>
        <div id="module-name"></div>
        <div id="module-description"></div>
        <ul id="material-list"></ul>
        <ul id="quiz-list"></ul>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const courseList = document.getElementById('course-list');
            const courseNameElement = document.getElementById('course-name');
            const courseDescriptionElement = document.getElementById('course-description');
            const moduleNameElement = document.getElementById('module-name');
            const moduleDescriptionElement = document.getElementById('module-description');
            const materialList = document.getElementById('material-list');
            const quizList = document.getElementById('quiz-list');
            const sidebar = document.getElementById('sidebar');

            courseList.addEventListener('click', async (event) => {
                if (event.target && event.target.classList.contains('course-link')) {
                    event.preventDefault();
                    const courseId = event.target.dataset.courseId;

                    // Hide all module lists and remove module list content from other courses
                    document.querySelectorAll('.module-list').forEach(moduleList => {
                        if (moduleList.dataset.courseId !== courseId) {
                            moduleList.style.display = 'none';
                        }
                    });

                    const selectedModuleList = document.querySelector(`.module-list[data-course-id="${courseId}"]`);

                    try {
                        // Show loading message
                        courseNameElement.textContent = 'Loading...';
                        courseDescriptionElement.textContent = '';

                        // Fetch modules for the selected course
                        const response = await fetch(`/courses/${courseId}/modules`);
                        const data = await response.json();

                        // Update course content
                        courseNameElement.textContent = data.courseName || 'Course Name';
                        courseDescriptionElement.textContent = data.courseDescription || 'Course Description';

                        // Show or update the module list for the selected course
                        if (selectedModuleList) {
                            selectedModuleList.style.display = 'block';
                            const moduleItemsElement = selectedModuleList.querySelector('.module-items');
                            moduleItemsElement.innerHTML = '';
                            data.modules.forEach(module => {
                                moduleItemsElement.innerHTML += `<li><a href="#" class="module-link" data-module-id="${module.module_id}">${module.module_name}</a></li>`;
                            });
                        }

                        // Clear materials and quizzes
                        materialList.innerHTML = '';
                        quizList.innerHTML = '';
                        moduleNameElement.textContent = '';
                        moduleDescriptionElement.textContent = '';
                    } catch (error) {
                        console.error('Error fetching course modules:', error);
                        courseNameElement.textContent = 'Error loading course';
                        courseDescriptionElement.textContent = '';
                    }
                }
            });

            sidebar.addEventListener('click', async (event) => {
                if (event.target && event.target.classList.contains('module-link')) {
                    event.preventDefault();
                    const moduleId = event.target.dataset.moduleId;

                    try {
                        // Show loading message
                        moduleNameElement.textContent = 'Loading...';
                        moduleDescriptionElement.textContent = '';

                        // Fetch module details, materials, and quizzes
                        const moduleResponse = await fetch(`/modules/${moduleId}`);
                        const moduleData = await moduleResponse.json();

                        // Update content with module and materials
                        moduleNameElement.textContent = moduleData.module_name || 'Module Name';
                        moduleDescriptionElement.textContent = moduleData.description || 'Module Description';

                        // Update content with materials
                        materialList.innerHTML = '<h3>Materials</h3><ul>';
                        moduleData.materials.forEach(material => {
                            materialList.innerHTML += `
                                <li>
                                    <span class="material-description">${material.description}</span><br>
                                    <a href="#" class="material-link" data-material-id="${material.material_id}">${material.link}</a>
                                </li>`;
                        });
                        materialList.innerHTML += '</ul>';

                        // Update content with quizzes
                        quizList.innerHTML = '<h3>Quizzes</h3><ul>';
                        if (moduleData.quizzes.length === 0) {
                            quizList.innerHTML += '<li>No quizzes available.</li>';
                        } else {
                            moduleData.quizzes.forEach(quiz => {
                                quizList.innerHTML += `<li><a href="/quiz/start/${quiz.quiz_id}">${quiz.quiz_title}</a></li>`;
                            });
                        }
                        quizList.innerHTML += '</ul>';
                    } catch (error) {
                        console.error('Error fetching module details, materials, or quizzes:', error);
                        moduleNameElement.textContent = 'Error loading module';
                        moduleDescriptionElement.textContent = '';
                        materialList.innerHTML = '<li>Error loading materials.</li>';
                        quizList.innerHTML = '<li>Error loading quizzes.</li>';
                    }
                }
            });

            materialList.addEventListener('click', async (event) => {
                if (event.target && event.target.classList.contains('material-link')) {
                    event.preventDefault();
                    const materialId = event.target.dataset.materialId;

                    try {
                        // Fetch material details
                        const response = await fetch(`/materials/${materialId}`);
                        if (response.redirected) {
                            // Redirect to login page if not authenticated
                            window.location.href = response.url;
                        } else {
                            const material = await response.json();
                            // Open material link in a new tab
                            window.open(material.link, '_blank');
                        }
                    } catch (error) {
                        console.error('Error fetching material details:', error);
                    }
                }
            });
        });
    </script>
</body>
</html>

