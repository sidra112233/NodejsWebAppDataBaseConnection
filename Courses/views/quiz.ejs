<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
            background: linear-gradient(to right, #001f3f, #003366); /* Navy Blue gradient background */
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            overflow: hidden;
            position: relative; /* Position relative to manage header and button */
        }

        .header {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: #001f3f; /* Navy Blue header */
            color: #fff; /* White text for contrast */
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            padding: 10px 20px;
            box-sizing: border-box;
            font-size: 1.2rem;
            display: flex;
            justify-content: space-between; /* Space between question info and timer */
            align-items: center; /* Center items vertically */
            z-index: 1000; /* Ensure the header is above other elements */
        }

        .header .question-info {
            flex: 1;
            text-align: center; /* Center text in header */
        }

        .header .timer {
            text-align: right; /* Align timer to the right */
        }

        .quiz-container {
            display: flex;
            width: 90vw; /* Decreased width */
            height: 90vh; /* Decreased height */
            background: #fff;
            border-radius: 8px; /* Optional: Add border-radius for rounded corners */
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            position: relative;
            margin-top: 60px; /* Space for header */
            margin-bottom: 20px; /* Add some space below */
            box-sizing: border-box;
            overflow: hidden; /* Prevents overflow issues */
        }

        .question-container,
        .options-container {
            flex: 1;
            padding: 20px;
            box-sizing: border-box;
            overflow-y: auto; /* Allow scrolling if content exceeds view */
        }

        .question-container {
            flex: 1; /* Takes half of the width */
            border-right: 2px solid #ddd;
            background-color: #f9f9f9;
            font-size: 1.7rem; /* Increased font size for question */
            color: #333;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
            width: 50%; /* Takes half of the width */
        }

        .options-container {
            background-color: #f4f4f4;
            font-size: 1.7rem;
            display: grid; /* Use grid layout */
            grid-template-columns: 1fr; /* Single column layout */
            width: 50%; /* Takes half of the width */
            gap: 0; /* Remove gap between grid items */
        }

        .options-container label {
            font-size: 1.5rem; /* Increased font size for options */
            color: #555;
            display: flex;
            align-items: center;
            width: 100%; /* Ensure labels take full width */
            text-align: center; /* Center text in label */
            padding: 10px; /* Add padding to labels */
            border: 1px solid #ddd; /* Border around options */
            border-radius: 5px; /* Rounded corners for options */
            background-color: #fff; /* Background color for options */
            box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Shadow for options */
            box-sizing: border-box; /* Ensure padding and border are included in width */
            margin: 0; /* Remove margin to eliminate spacing between options */
        }

        .options-container input[type="radio"] {
            display: none; /* Hide the default radio button */
        }

        .options-container .custom-radio {
            position: relative;
            display: flex;
            align-items: center;
            font-size: 1.3rem; /* Match the font size of options */
        }

        .options-container .custom-radio input[type="radio"] + span {
            position: relative;
            padding-left: 2rem; /* Space for the custom radio button */
            cursor: pointer;
        }

        .options-container .custom-radio input[type="radio"] + span::before {
            content: "";
            position: absolute;
            left: 0;
            top: 50%;
            transform: translateY(-50%);
            width: 1.3em; /* Adjust size to match font size */
            height: 1.3em; /* Adjust size to match font size */
            border: 2px solid #555;
            border-radius: 50%;
            background: #fff;
            box-shadow: 0 0 0 3px #fff inset; /* Add inner white circle to make it look cleaner */
        }

        .options-container input[type="radio"]:checked + span::before {
            background: #001f3f; /* Navy blue background for selected state */
            box-shadow: 0 0 0 6px #fff inset; /* Add inner white circle to make it look cleaner */
        }

        .options-container input[type="radio"]:checked + span::after {
            content: "";
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            width: 0.5em; /* Smaller inner circle for selected state */
            height: 0.5em;
            border-radius: 50%;
            background: #fff;
        }

        .next-btn {
            position: absolute;
            top: 20px; /* Position below header */
            right: 20px;
            background-color: #04AA6D;
            color: #fff;
            border-radius: 12px;
            padding: 15px 30px;
            font-size: 1.5rem; /* Increased font size for button */
            cursor: pointer;
            transition: background-color 0.3s ease;
            border-style: none;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1); /* Add shadow to button */
            z-index: 1001; /* Ensure the button is above other elements */
        }

        .next-btn:hover {
            background-color: #028a5e;
        }

        .next-btn:focus {
            outline: none;
        }
    </style>
    <script>
        function startTimer(duration, display) {
            var timer = duration, minutes, seconds;
            var intervalId = setInterval(function () {
                minutes = parseInt(timer / 60, 10);
                seconds = parseInt(timer % 60, 10);

                minutes = minutes < 10 ? '0' + minutes : minutes;
                seconds = seconds < 10 ? '0' + seconds : seconds;

                display.textContent = minutes + ':' + seconds;

                if (--timer < 0) {
                    timer = 0;
                    clearInterval(intervalId);
                    document.querySelector('form').submit(); // Auto-submit when time expires
                }
            }, 1000);
        }

        window.onload = function () {
            var timeLimitInSeconds = <%= timeLimit * 60 %>; // Total quiz time in seconds
            var timeLeftInSeconds = <%= timeLeft %>; // Remaining time in seconds
            var display = document.querySelector('#time');
            startTimer(timeLeftInSeconds, display);
        };
    </script>
</head>
<body>
    <div class="header">
        <div class="question-info">
            Question <%= currentQuestionIndex + 1 %> of <%= totalQuestions %>
        </div>
        <div class="timer">
            Time Left: <span id="time"></span>
        </div>
    </div>
    <form action="/next" method="POST">
        <input type="hidden" name="student_id" value="<%= student_id %>">
        <input type="hidden" name="currentQuestionId" value="<%= questions[currentQuestionIndex].question_id %>">

        <div class="quiz-container">
            <button class="next-btn" type="submit" name="action" value="<%= currentQuestionIndex < totalQuestions - 1 ? 'next' : 'submit' %>">
                <%= currentQuestionIndex < totalQuestions - 1 ? 'Next' : 'Submit' %>
            </button>
            <div class="question-container">
                <h3><%= questions[currentQuestionIndex].question_text %></h3>
            </div>
            <div class="options-container">
                <% questions[currentQuestionIndex].options.forEach((option, index) => { %>
                    <label class="custom-radio">
                        <input type="radio" name="answers[<%= questions[currentQuestionIndex].question_id %>]" value="<%= index + 1 %>" required>
                        <span><%= option %></span>
                    </label>
                <% }) %>
            </div>
        </div>
    </form>
</body>
</html>
